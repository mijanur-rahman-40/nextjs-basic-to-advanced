{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mijanur/Desktop/NEXTJS/nextjs-basic-to-advanced/pages/article/[id]/index.js\",\n    _this = this;\n\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Meta from '../../../components/Meta';\n\nvar article = function article(_ref) {\n  var article = _ref.article;\n  // const router = useRouter()\n  // const { id } = router.query\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: article.title,\n      description: article.excerpt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: article.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: article.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\narticle.layout = 'L1';\n// export const getStaticProps = async (context) => {\n//   const res = await fetch(\n//     `https://jsonplaceholder.typicode.com/posts/${context.params.id}`\n//   )\n//   const article = await res.json()\n//   return {\n//     props: {\n//       article,\n//     },\n//   }\n// }\n// export const getStaticPaths = async () => {\n//   const res = await fetch(`https://jsonplaceholder.typicode.com/posts`)\n//   const articles = await res.json()\n//   const ids = articles.map((article) => article.id)\n//   const paths = ids.map((id) => ({ params: { id: id.toString() } }))\n//   return {\n//     paths,\n//     fallback: false,\n//   }\n// }\nexport var __N_SSG = true;\nexport default article;","map":{"version":3,"sources":["/home/mijanur/Desktop/NEXTJS/nextjs-basic-to-advanced/pages/article/[id]/index.js"],"names":["Link","useRouter","Meta","article","title","excerpt","body","layout"],"mappings":";;;;;;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AAEA,IAAMC,OAAO,GAAG,uBAAiB;AAAA,MAAdA,OAAc,QAAdA,OAAc;AAC/B;AACA;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEA,OAAO,CAACC,KAArB;AAA4B,MAAA,WAAW,EAAED,OAAO,CAACE;AAAjD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA,gBAAKF,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA,gBAAID,OAAO,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF;AAAA,kBADF;AASD,CAbD;;AAeAH,OAAO,CAACI,MAAR,GAAiB,IAAjB;AA4BA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAeJ,OAAf","sourcesContent":["import { server } from '../../../config'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\nimport Meta from '../../../components/Meta'\n\nconst article = ({ article }) => {\n  // const router = useRouter()\n  // const { id } = router.query\n\n  return (\n    <>\n      <Meta title={article.title} description={article.excerpt} />\n      <h1>{article.title}</h1>\n      <p>{article.body}</p>\n      <br />\n      <Link href='/'>Go Back</Link>\n    </>\n  )\n}\n\narticle.layout = 'L1';\n\nexport const getStaticProps = async (context) => {\n  const res = await fetch(`${ server }/api/articles/${ context.params.id }`)\n\n  const article = await res.json()\n\n  return {\n    props: {\n      article,\n    },\n  }\n}\n\nexport const getStaticPaths = async () => {\n  const res = await fetch(`${ server }/api/articles`)\n\n  const articles = await res.json()\n\n  const ids = articles.map((article) => article.id)\n  const paths = ids.map((id) => ({ params: { id: id.toString() } }))\n\n  return {\n    paths,\n    fallback: false,\n  }\n}\n\n// export const getStaticProps = async (context) => {\n//   const res = await fetch(\n//     `https://jsonplaceholder.typicode.com/posts/${context.params.id}`\n//   )\n\n//   const article = await res.json()\n\n//   return {\n//     props: {\n//       article,\n//     },\n//   }\n// }\n\n// export const getStaticPaths = async () => {\n//   const res = await fetch(`https://jsonplaceholder.typicode.com/posts`)\n\n//   const articles = await res.json()\n\n//   const ids = articles.map((article) => article.id)\n//   const paths = ids.map((id) => ({ params: { id: id.toString() } }))\n\n//   return {\n//     paths,\n//     fallback: false,\n//   }\n// }\n\nexport default article\n"]},"metadata":{},"sourceType":"module"}